{"version":3,"sources":["action/action.ts","alert/swalAlertContent.ts","images/TipTap_logo.png","domain/router.ts","components/templates/landingTemplate.tsx","components/pages/landing.tsx","components/uiParts/enthusiastsRanking.tsx","components/uiParts/tapsLineChart.tsx","components/templates/roomResultTemplate.tsx","services/timeCalService.ts","components/uiParts/tapButton.tsx","components/uiParts/tapsProgressBar.tsx","components/uiParts/themeBackground.jsx","components/templates/themeTemplate.tsx","components/pages/theme.tsx","services/formatCheckService.ts","utils/theme.tsx","components/uiParts/themeForm.tsx","components/uiParts/themeDialog.tsx","components/uiParts/floatingButton.tsx","components/uiParts/searchAppBar.tsx","components/uiParts/themeListCards.tsx","components/uiParts/themeListTitle.tsx","components/templates/themeListTemplate.tsx","components/pages/themes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["domain","sendSuccess","title","icon","timer","button","sendError","text","fetchError","loginError","closeOnClickOutside","closeOnEsc","allowOutsideClick","allowEscapeKey","window","location","host","headers","client","uid","errorHandler","error","response","status","alert","message","request","Api","name","requestConfig","api","axios","get","then","data","catch","postThemeData","post","id","postUserTaps","loginInfo","Routes","path","LandingTemplate","history","useHistory","React","useState","email","password","setLoginInfo","signInName","setSignInName","signInButtonFlag","setSignInButtonFlag","showPassword","values","setValues","handleLoginInfoChange","event","target","value","style","display","flexDirection","alignItems","margin","zIndex","height","width","src","TipTapLogo","Typography","component","variant","fontSize","Card","CardContent","noValidate","TextField","fullWidth","label","inputProps","padding","onChange","FormControl","InputLabel","htmlFor","OutlinedInput","labelWidth","type","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","preventDefault","edge","CardActions","Button","color","fontWeight","headerUserInfo","console","log","headerUserInfoJson","JSON","stringify","localStorage","setItem","myInfo","push","swal","disabled","bottom","right","Landing","TapsLineChart","props","taps_ranking","Grid","container","direction","item","xs","total_taps","time_series","ResponsiveContainer","aspect","LineChart","top","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","strokeWidth","animationDuration","useStyles","makeStyles","theme","floatButton","typography","RoomTemplate","theme_result","classes","room","setRoom","justifyContent","Box","pt","noWrap","textAlign","rooms_num","rooms","total_counts","sm","started_at","created_at","closed_at","close_time","className","size","TimeCalService","closeTime","moment","unix","unixTime","object","isClose","displayTime","currentTime","duration","this","LeaveTime","diff","TapButton","countUp","TapButtonBase","TapButtonTop","TapButtonBottom","styled","a","span","BorderLinearProgress","withStyles","createStyles","root","borderRadius","colorPrimary","backgroundColor","palette","grey","bar","LinearProgress","TapsProgressBar","progress","max","mr","minWidth","config","colorScheme","ThemeBackground","canvasRef","useRef","useEffect","canvas","current","innerWidth","innerHeight","c","getContext","Firework","radius","Math","random","x","y","floor","length","velocity","maxY","life","Spark","curve","prototype","draw","beginPath","arc","PI","fillStyle","fill","closePath","maximumY","i","sparkArray","update","fireworkArray","animate","requestAnimationFrame","fillRect","forEach","fw","index","splice","s","ref","transform","backButton","maxes","ThemeTemplate","taps","setTaps","setMax","setProgress","depth","timeCalService","overflow","IsPassed","enthusiastic_close_time","mb","prev","requestParams","room_id","counts","parse","getItem","res","user_room_total_taps","Ocean","String","Wave","div","Theme","useParams","setTheme","setInterval","is_closed","FormatCheckService","character","primaryColor","secondaryColor","greyColor","disableColor","font","fontFamily","background","formControl","spacing","textField","ThemeForm","setPostThemeData","checked","setChecked","handleChange","roomArray","FormControlLabel","control","Checkbox","Select","labelId","MenuItem","Themes","initialPostThemeData","ThemeDialog","open","handleDialogClose","handleGetThemes","useContext","ThemeListContext","formatCheckService","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","LengthCheck","every","v","undefined","autoFocus","addIcon","marginRight","FloatingButton","setOpen","Fab","flexGrow","breakpoints","up","search","shape","alpha","common","white","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","imgStyle","SearchAppBar","AppBar","Toolbar","InputBase","placeholder","input","card","disableCard","totalCount","competitionIcon","ThemeListCards","themeList","searched_themes","map","leftTime","DisplayLeaveTime","borderBottom","ThemeListTitle","content","marginTop","overflowY","cards","ThemeListTemplate","createContext","setThemeList","Provider","App","exact","NoMatch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c5f0be1.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios'\nimport { PostTheme } from 'src/domain/postThemes'\nimport { isNullishCoalesce } from 'typescript'\n\nimport { PostUserTaps } from '../domain/postUserTaps'\nimport { UserInfo, LoginInfo } from '../domain/userInfo'\n\n//サーバー接続の切り替え\nlet domain: string\nswitch (window.location.host) {\n   case 'localhost:3000':\n      domain = 'https://d1-tiptap.herokuapp.com'\n      break\n   case '': //本番\n      domain = ''\n      break\n   default:\n      domain = 'https://d1-tiptap.herokuapp.com'\n}\n\nconst headers = {\n   headers: {\n      client: '',\n      uid: '',\n      'access-token': '',\n   },\n}\n\nconst errorHandler = (error: AxiosError) => {\n   if (error.response) {\n      switch (error.response.status) {\n         case 400:\n            alert('400' + error.message)\n            break\n         case 401:\n            alert('401' + error.message)\n            break\n         case 403:\n            alert('403' + error.message)\n            break\n         case 404:\n            alert('404' + error.message)\n            break\n         case 500:\n            alert('500' + error.message)\n            break\n         default:\n            alert(error.message)\n      }\n   } else if (error.request) {\n      alert(error.request)\n   } else {\n      alert('Error' + error.message)\n   }\n}\n\nexport const Api = {\n   getThemes: (name: string | undefined, headers: any): Promise<Error> => {\n      const requestConfig = {\n         headers,\n      }\n      const api = name\n         ? `${domain}/api/themes?name=${name}`\n         : `${domain}/api/themes`\n      return axios\n         .get(api, requestConfig)\n         .then((response) => {\n            return response.data\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n   postThemes: (postThemeData: PostTheme, headers: any): Promise<Error> => {\n      const requestConfig = {\n         headers,\n      }\n      return axios\n         .post(`${domain}/api/themes`, postThemeData, requestConfig)\n         .then((response) => {\n            return response.data\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n   getTheme: (id: string | undefined): Promise<Error> => {\n      return axios\n         .get(`${domain}/api/themes/${id}`, headers)\n         .then((response) => {\n            return response.data\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n   postUserTaps: (postUserTaps: PostUserTaps, headers: any): Promise<Error> => {\n      const requestConfig = {\n         headers,\n      }\n      return axios\n         .post(`${domain}/api/user_taps`, postUserTaps, requestConfig)\n         .then((response) => {\n            return response.data\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n   signIn: (\n      loginInfo: LoginInfo\n   ): Promise<Error> | Promise<void | UserInfo> => {\n      return axios\n         .post(`${domain}/api/auth/sign_in`, loginInfo)\n         .then((response) => {\n            return response.headers\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n   getMyInfo: (headers: any): Promise<Error> => {\n      const requestConfig = {\n         headers,\n      }\n      return axios\n         .get(`${domain}/api/users/myinfo`, requestConfig)\n         .then((response) => {\n            return response.data\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n   logout: (headers: any): Promise<Error> => {\n      const requestConfig = {\n         headers,\n      }\n      return axios\n         .delete(`${domain}/api/sign_out`, requestConfig)\n         .then((response) => {\n            return response.data\n         })\n         .catch((error) => {\n            errorHandler(error)\n         })\n   },\n}\n","export const sendSuccess = {\r\n   title: '送信完了',\r\n   icon: 'success',\r\n   timer: 1500,\r\n   button: false,\r\n}\r\n\r\nexport const sendError = {\r\n   title: '送信エラー',\r\n   text: '送信できませんでした',\r\n   icon: 'error',\r\n   timer: 1500,\r\n   button: false,\r\n}\r\n\r\nexport const fetchError = {\r\n   title: '受信エラー',\r\n   text: '受信できませんでした',\r\n   icon: 'error',\r\n   timer: 1500,\r\n   button: false,\r\n}\r\n\r\nexport const loginError = {\r\n   title: 'ログインできませんでした',\r\n   text: 'メールアドレスまたはパスワードが違います。お手数ですが、通信環境の良いところでもう一度入力してください。',\r\n   icon: 'error',\r\n   button: true,\r\n   closeOnClickOutside: false,\r\n   closeOnEsc: false,\r\n   allowOutsideClick: false,\r\n   allowEscapeKey: false,\r\n}\r\nexport const networkError = {\r\n   title: 'エラー',\r\n   text: '通信にエラーが生じたため、強制的にログアウトします。お手数ですが、再度ログインしてください。\\n\\n考えられる原因：\\n*通信環境の悪いところで利用した。\\n*セッションが無効',\r\n   icon: 'error',\r\n   button: 'Logout',\r\n   closeOnClickOutside: false,\r\n   closeOnEsc: false,\r\n   allowOutsideClick: false,\r\n   allowEscapeKey: false,\r\n}\r\n\r\n\r\nexport const editWarning = {\r\n   title: '内容は保存されません。',\r\n   text: '終了してもよろしいですか？',\r\n   icon: 'warning',\r\n   buttons: ['編集を続ける', '閉じる'],\r\n   closeOnClickOutside: false,\r\n   closeOnEsc: false,\r\n   allowOutsideClick: false,\r\n   allowEscapeKey: false,\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/TipTap_logo.7ea7696f.png\";","// Read Only\nexport const Routes = {\n   landing: { title: 'ランディングページ', path: '/' },\n   themes: { title: 'テーマリストページ', path: '/themes' },\n   theme: { title: 'テーマページ', path: '/themes/:id' },\n   themeBackground: {\n      title: 'テーマの背景ページ(最終的には消す)',\n      path: '/themeBackground',\n   },\n} as const\n\nexport type Routes = typeof Routes[keyof typeof Routes]\n","import Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport React, { FC } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { loginError, fetchError } from 'src/alert/swalAlertContent'\nimport { UserInfo, LoginInfo } from 'src/domain/userInfo'\nimport TipTapLogo from 'src/images/TipTap_logo.png'\nimport swal from 'sweetalert'\n\nimport { Api } from '../../action/action'\nimport { Routes } from '../../domain/router'\n\nconst LandingTemplate: FC = () => {\n   const history = useHistory()\n\n   const [loginInfo, setLoginInfo] = React.useState<LoginInfo>({\n      email: '',\n      password: '',\n   })\n   const [signInName, setSignInName] = React.useState('Sign in')\n   const [signInButtonFlag, setSignInButtonFlag] = React.useState(false)\n   const [checked, setChecked] = React.useState(false)\n   const [values, setValues] = React.useState({\n      password: '',\n      showPassword: false,\n   })\n   const handleLoginInfoChange = (name: string) => (event: any) => {\n      setLoginInfo({ ...loginInfo, [name]: event.target.value })\n   }\n\n   const handleClickShowPassword = () => {\n      setValues({ ...values, showPassword: !values.showPassword })\n   }\n\n   const handleMouseDownPassword = (event: any) => {\n      event.preventDefault()\n   }\n\n   const loginCheck = () => {\n      setSignInName('Signing in...')\n      setSignInButtonFlag(true)\n      Api.signIn(loginInfo).then((headerUserInfo: any) => {\n         if (headerUserInfo) {\n            console.log(headerUserInfo)\n            const headerUserInfoJson = JSON.stringify(headerUserInfo)\n            localStorage.setItem('headerUserInfo', headerUserInfoJson)\n            Api.getMyInfo(headerUserInfo).then((myInfo: any) => {\n               if (myInfo) {\n                  history.push(Routes.themes.path)\n               } else {\n                  swal(fetchError)\n                  setSignInName('Sign in')\n                  setSignInButtonFlag(false)\n               }\n            })\n         } else {\n            swal(loginError)\n            setSignInName('Sign in')\n            setSignInButtonFlag(false)\n         }\n      })\n   }\n\n   return (\n      <div\n         style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            margin: '165px 20px',\n            zIndex: 1000,\n         }}\n      >\n         <img style={{ height: '40%', width: '300px' }} src={TipTapLogo} />\n         <Typography\n            component=\"h3\"\n            variant=\"h4\"\n            style={{ margin: '25px auto', fontSize: '1.725rem' }}\n         >\n            Sign in to TipTap\n         </Typography>\n         <Card variant=\"outlined\">\n            {/* {linearAnimation && <LinearProgress />} */}\n            <CardContent>\n               <form style={{ width: '100%' }} noValidate>\n                  <TextField\n                     margin=\"normal\"\n                     //required\n                     variant=\"outlined\"\n                     fullWidth\n                     id=\"email\"\n                     label=\"メールアドレス\"\n                     name=\"email\"\n                     //autoComplete=\"id\"\n                     inputProps={{ style: { padding: '15px 13px' } }}\n                     onChange={handleLoginInfoChange('email')}\n                     //autoFocus\n                  />\n                  <div style={{ margin: '8px 0px' }}>\n                     <FormControl variant=\"outlined\" style={{ width: '100%' }}>\n                        <InputLabel htmlFor=\"outlined-adornment-password\">\n                           パスワード\n                        </InputLabel>\n                        <OutlinedInput\n                           fullWidth\n                           label=\"パスワード\"\n                           labelWidth={80}\n                           inputProps={{\n                              style: { padding: '15px 13px' },\n                           }}\n                           type={values.showPassword ? 'text' : 'password'}\n                           onChange={handleLoginInfoChange('password')}\n                           endAdornment={\n                              <InputAdornment position=\"end\">\n                                 <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                 >\n                                    {values.showPassword ? (\n                                       <Visibility />\n                                    ) : (\n                                       <VisibilityOff />\n                                    )}\n                                 </IconButton>\n                              </InputAdornment>\n                           }\n                        />\n                     </FormControl>\n                  </div>\n               </form>\n            </CardContent>\n            <CardActions style={{ padding: '16px' }}>\n               <Button\n                  type=\"button\"\n                  color=\"primary\"\n                  fullWidth\n                  style={{ fontWeight: 'bold' }}\n                  variant=\"contained\"\n                  onClick={loginCheck}\n                  disabled={signInButtonFlag}\n               >\n                  {signInName}{' '}\n               </Button>\n               <br />\n            </CardActions>\n            <div style={{ position: 'fixed', bottom: 0, right: '3%' }}>\n               Ver.1.0.0\n            </div>\n         </Card>\n      </div>\n   )\n}\nexport default LandingTemplate\n","import React, { FC } from 'react'\n\nimport LandingTemplate from '../templates/landingTemplate'\n\n\nconst Landing: FC = () => {\n   return <LandingTemplate />\n}\n\nexport default Landing\n","import { Grid } from '@material-ui/core';\nimport React, { FC } from 'react'\n\n\ntype Props = {\n   taps_ranking: {\n      1: { \n         name: string\n         total_taps: number \n      }\n      2: { \n         name: string\n         total_taps: number \n      }\n      3: { \n         name: string\n         total_taps: number \n      }\n   }\n}\n\nconst TapsLineChart: FC<Props> = (props) => {\n   const { taps_ranking } = props\n\n   return (\n      <>\n         <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item>\n               <h1>熱狂ランキング</h1>\n            </Grid>\n            <Grid container>\n               <Grid item xs={2}><p>1位: </p></Grid>\n               <Grid item xs={6}><p>{taps_ranking[1].name}</p></Grid>\n               <Grid item xs={4}><p>{taps_ranking[1].total_taps}</p></Grid>\n            </Grid>\n            <Grid container>\n               <Grid item xs={2}><p>2位: </p></Grid>\n               <Grid item xs={6}><p>{taps_ranking[2].name}</p></Grid>\n               <Grid item xs={4}><p>{taps_ranking[2].total_taps}</p></Grid>\n            </Grid>\n            <Grid container>\n               <Grid item xs={2}><p>3位: </p></Grid>\n               <Grid item xs={6}><p>{taps_ranking[3].name}</p></Grid>\n               <Grid item xs={4}><p>{taps_ranking[3].total_taps}</p></Grid>\n            </Grid>\n         </Grid>\n      </>\n   )\n}\nexport default TapsLineChart\n","import React, { FC } from 'react'\nimport {\n   LineChart,\n   Line,\n   XAxis,\n   YAxis,\n   CartesianGrid,\n   Tooltip,\n   Legend,\n   ResponsiveContainer,\n} from 'recharts'\n\ntype Props = {\n   time_series: {\n      num: number\n      counts: number\n   }[]\n   started_at: number\n   closed_at: number\n}\n\nconst TapsLineChart: FC<Props> = (props) => {\n   const { time_series } = props\n\n   return (\n      <>\n         <div>\n            <ResponsiveContainer width=\"100%\" height=\"100%\" aspect={1.5}>\n               <LineChart\n                  width={500}\n                  height={300}\n                  data={time_series}\n                  margin={{\n                     top: 5,\n                     right: 30,\n                     left: 20,\n                     bottom: 5,\n                  }}\n               >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"created_at\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                     name=\"タップ数\"\n                     type=\"monotone\"\n                     dataKey=\"counts\"\n                     stroke=\"#8884d8\"\n                     activeDot={{ r: 3 }}\n                     strokeWidth={2}\n                     animationDuration={3000}\n                  />\n               </LineChart>\n            </ResponsiveContainer>\n         </div>\n      </>\n   )\n}\nexport default TapsLineChart\n","import { Box, Button, Grid, Typography } from '@material-ui/core'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport SyncIcon from '@material-ui/icons/Sync'\nimport React, { FC, useState } from 'react'\n\nimport EnthusiastsRanking from '../uiParts/enthusiastsRanking'\nimport TapsLineChart from '../uiParts/tapsLineChart'\n\ntype Props = {\n   theme_result: {\n      name: string\n      rooms_num: number\n      close_time: number\n      is_closed: boolean\n      user_id: number\n      created_at: number\n      rooms: {\n         id: number\n         name: string\n         total_counts: number\n         user_room_total_taps: number\n         enthusiastic_close_time: number\n         tap_speed: number\n         time_series: {\n            num: number\n            counts: number\n         }[]\n         taps_ranking: {\n            1: {\n               name: string\n               total_taps: number\n            }\n            2: {\n               name: string\n               total_taps: number\n            }\n            3: {\n               name: string\n               total_taps: number\n            }\n         }\n      }[]\n   }\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n   floatButton: {\n      position: 'fixed',\n      right: '50px',\n      bottom: '20px',\n      zIndex: 200,\n      ...theme.typography.button,\n   },\n}))\n\n// TODO 全体的なスタイル調整\nconst RoomTemplate: FC<Props> = (props) => {\n   const theme_result = props.theme_result\n   const classes = useStyles()\n   const [room, setRoom] = useState<number>(0)\n\n   console.log('room template')\n\n   const changeRoom = () => {\n      setRoom((room + 1) % theme_result.rooms_num)\n      console.log(room)\n   }\n\n   return (\n      <>\n         <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n         >\n            <Box pt={3}>\n               <Grid item>結果</Grid>\n            </Box>\n            <Grid item>\n               <Typography noWrap style={{ textAlign: 'center' }}>\n                  <h2>{theme_result.name}</h2>\n                  {theme_result.rooms_num != 1 && (\n                     <h3>{theme_result.rooms[room].name} 陣営</h3>\n                  )}\n               </Typography>\n            </Grid>\n            <Grid item>\n               <h1>累計タップ: {theme_result.rooms[room].total_counts}</h1>\n            </Grid>\n            <Grid item xs={12} sm={6} style={{ width: '100%' }}>\n               <TapsLineChart\n                  started_at={theme_result.created_at}\n                  closed_at={theme_result.close_time}\n                  time_series={theme_result.rooms[room].time_series}\n               />\n            </Grid>\n            <Grid item>\n               <EnthusiastsRanking\n                  taps_ranking={theme_result.rooms[room].taps_ranking}\n               />\n            </Grid>\n         </Grid>\n         <div className={classes.floatButton}>\n            {theme_result.rooms_num != 1 && (\n               <Button color=\"secondary\" size=\"medium\" onClick={changeRoom}>\n                  <SyncIcon />\n                  陣営を変更\n               </Button>\n            )}\n         </div>\n      </>\n   )\n}\nexport default RoomTemplate\n","import moment from 'moment'\n\nexport class TimeCalService {\n   //残り時間(unixtime)をリターン\n   public LeaveTime(closeTime: number): number {\n      const result = moment(closeTime * 1000).unix() - moment().unix()\n      return result\n   }\n   //残り時間(unixtime)をリターン\n   public DisplayLeaveTime(unixTime: number) {\n      const object = {\n         isClose: false,\n         displayTime: '',\n      }\n      const currentTime = moment()\n      const closeTime = moment(unixTime * 1000)\n      const duration = this.LeaveTime(unixTime)\n      if (duration < 0) {\n         object.isClose = true\n         object.displayTime = '終了'\n      } else if (duration >= 0 && duration < 60) {\n         object.displayTime = closeTime.diff(currentTime, 'seconds') + '秒'\n      } else if (duration >= 60 && duration < 3600) {\n         object.displayTime = closeTime.diff(currentTime, 'minutes') + '分'\n      } else {\n         object.displayTime = closeTime.diff(currentTime, 'hours') + '時間'\n      }\n      return object\n   }\n  //時間が過ぎたかどうか(unixtime)をリターン\n   public IsPassed(closeTime: number): boolean {\n      const result = closeTime - moment().unix()\n      if (result > 0) {\n         return false\n      }\n      return true\n   }\n}\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n   countUp: () => void\n}\n\nconst TapButton: FC<Props> = (props) => {\n   const { countUp } = props\n\n   return (\n      <>\n         <TapButtonBase onClick={countUp}>\n            <TapButtonTop></TapButtonTop>\n            <TapButtonBottom></TapButtonBottom>\n         </TapButtonBase>\n      </>\n   )\n}\n\nexport default TapButton\n\nconst TapButtonBase = styled.a`\n   position: relative;\n   display: block;\n   width: 200px;\n   height: 130px;\n   margin: 0 auto;\n   -webkit-tap-highlight-color: transparent;\n`\n\nconst TapButtonTop = styled.span`\n   position: absolute;\n   top: 0;\n   left: 20px;\n   width: 160px;\n   height: 60px;\n   margin-top: 30px;\n\n   border-radius: 0 0 50% 50%;\n   background: #d62d2d;\n   z-index: 1000;\n\n   &::before {\n      position: absolute;\n      top: -30px;\n      left: 0;\n      width: 160px;\n      height: 60px;\n      content: '';\n      border-radius: 80px / 30px;\n      background: #ed4c4c;\n   }\n\n   &:active {\n      top: 20px;\n      height: 40px;\n      transition: 0s;\n   }\n\n   span {\n      font-size: 38px;\n      font-weight: bold;\n\n      position: absolute;\n      top: -24px;\n      left: 0;\n\n      width: 100%;\n\n      -webkit-transform: scaleY(0.75);\n\n      transform: scaleY(0.75);\n      text-align: center;\n\n      color: #f6a3a3;\n   }\n`\n\nconst TapButtonBottom = styled.span`\n   position: absolute;\n   top: 38px;\n   left: 0;\n\n   width: 200px;\n   height: 80px;\n\n   border-radius: 100px / 40px;\n   background: #d8e4ea;\n   -webkit-box-shadow: 0 8px 0 #c4cacc;\n   box-shadow: 0 8px 0 #c4cacc;\n   span {\n      font-size: 38px;\n      font-weight: bold;\n\n      position: absolute;\n      top: -24px;\n      left: 0;\n\n      width: 100%;\n\n      -webkit-transform: scaleY(0.75);\n\n      transform: scaleY(0.75);\n      text-align: center;\n\n      color: #f6a3a3;\n      z-index: 1000;\n   }\n`\n","import { Box, LinearProgress, Typography } from '@material-ui/core'\nimport {\n   makeStyles,\n   createStyles,\n   withStyles,\n   Theme,\n} from '@material-ui/core/styles'\nimport React, { FC } from 'react'\n\ntype Props = {\n   progress: number\n   max: number\n}\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         height: 10,\n         borderRadius: 5,\n      },\n      colorPrimary: {\n         backgroundColor:\n            theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n      },\n      bar: {\n         borderRadius: 5,\n         backgroundColor: '#1a90ff',\n      },\n   })\n)(LinearProgress)\n\nconst TapsProgressBar: FC<Props> = (props) => {\n   const { progress, max } = props\n\n   return (\n      <>\n         <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n               <BorderLinearProgress variant=\"determinate\" value={progress} />\n            </Box>\n            <Box minWidth={35}>\n               <Typography variant=\"body2\" color=\"textSecondary\">\n                  {`| ${max}`}\n               </Typography>\n            </Box>\n         </Box>\n      </>\n   )\n}\nexport default TapsProgressBar\n","import React, { useState, FC, useEffect, useRef } from 'react'\r\n\r\nconst config = {\r\n   size: 3,\r\n   number: 12,\r\n   fill: 0.1,\r\n}\r\n\r\nconst colorScheme = [\r\n   '#f2f2f2',\r\n   '#fa709a',\r\n   '#E7DE2F',\r\n   '#fee140',\r\n   '#FFAEAE',\r\n   '#77A5D8',\r\n   '#c2e9fb',\r\n   '#96e6a1',\r\n   '#453a94',\r\n]\r\n\r\nconst ThemeBackground = () => {\r\n   const canvasRef = useRef(null)\r\n\r\n   useEffect(() => {\r\n      const canvas = canvasRef.current\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n\r\n      const c = canvas.getContext('2d')\r\n\r\n      function Firework() {\r\n         this.radius = Math.random() * config.size + 1\r\n         this.x = canvas.width / 2\r\n         this.y = canvas.height + this.radius\r\n         this.color =\r\n            colorScheme[Math.floor(Math.random() * colorScheme.length)]\r\n         this.velocity = {\r\n            x: Math.random() * 6 - 3,\r\n            y: Math.random() * 3 + 3,\r\n         }\r\n         this.maxY = (Math.random() * canvas.height) / 4 + canvas.height / 10\r\n         this.life = false\r\n      }\r\n\r\n      Firework.prototype.draw = function (c) {\r\n         c.beginPath()\r\n         c.arc(this.x, this.y, this.radius, 0, Math.PI * 2)\r\n         c.fillStyle = this.color\r\n         c.fill()\r\n         c.closePath()\r\n      }\r\n\r\n      Firework.prototype.maximumY = function () {\r\n         if (this.y <= this.maxY || this.x <= 0 || this.x >= canvas.width) {\r\n            this.life = true\r\n            for (let i = 0; i < 10; i++) {\r\n               sparkArray.push(\r\n                  new Spark(this.x, this.y, this.radius, this.color)\r\n               )\r\n            }\r\n         }\r\n      }\r\n\r\n      Firework.prototype.update = function (c) {\r\n         this.y -= this.velocity.y\r\n         this.x += this.velocity.x\r\n\r\n         this.maximumY()\r\n\r\n         this.draw(c)\r\n      }\r\n      /** End Firework**/\r\n      /** Spark **/\r\n      function Spark(x, y, radius, color) {\r\n         this.x = x\r\n         this.y = y\r\n         this.radius = radius / 2\r\n         this.color = color\r\n         this.velocity = {\r\n            x: Math.random() * 3 - 1,\r\n            y: Math.random() * 3 - 1,\r\n         }\r\n         this.curve = 0.025\r\n         this.life = 140\r\n      }\r\n\r\n      Spark.prototype.draw = function (c) {\r\n         c.beginPath()\r\n         c.arc(this.x, this.y, this.radius, 0, Math.PI * 2)\r\n         c.fillStyle = this.color\r\n         c.fill()\r\n         c.closePath()\r\n      }\r\n\r\n      Spark.prototype.update = function (c) {\r\n         this.velocity.y -= this.curve\r\n         this.life -= 1\r\n         this.x += this.velocity.x\r\n         this.y -= this.velocity.y\r\n         this.draw(c)\r\n      }\r\n      /** End Spark **/\r\n\r\n      const fireworkArray = []\r\n      const sparkArray = []\r\n\r\n      function init() {\r\n         if (fireworkArray.length < config.number) {\r\n            fireworkArray.push(new Firework())\r\n         }\r\n      }\r\n\r\n      function animate() {\r\n         window.requestAnimationFrame(animate)\r\n\r\n         c.fillStyle = `rgba(0,0,0,${config.fill})`\r\n         c.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n         fireworkArray.forEach((fw, index) => {\r\n            fw.update(c)\r\n\r\n            if (fw.life) {\r\n               fireworkArray.splice(index, 1)\r\n            }\r\n         })\r\n\r\n         sparkArray.forEach((s, index) => {\r\n            if (s.life <= 0) {\r\n               sparkArray.splice(index, 1)\r\n            }\r\n\r\n            s.update(c)\r\n         })\r\n\r\n         init()\r\n      }\r\n\r\n      animate()\r\n   }, [])\r\n\r\n   // cssなのでstringにしています\r\n   return (\r\n      <div style={{ position: 'fixed', zIndex: '-1000' }}>\r\n         <canvas className=\"canvas\" ref={canvasRef} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ThemeBackground\r\n","import { Box, Button, Typography } from '@material-ui/core'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport SyncIcon from '@material-ui/icons/Sync'\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Api } from 'src/action/action'\r\nimport styled from 'styled-components'\r\n\r\nimport { PostUserTaps } from '../../domain/postUserTaps'\r\nimport { Routes } from '../../domain/router'\r\nimport { TimeCalService } from '../../services/timeCalService'\r\nimport TapButton from '../uiParts/tapButton'\r\nimport TapsProgressBar from '../uiParts/tapsProgressBar'\r\nimport ThemeBackground from '../uiParts/themeBackground.jsx'\r\n\r\ntype Props = {\r\n   theme: {\r\n      name: string\r\n      rooms_num: number\r\n      close_time: number\r\n      is_closed: boolean\r\n      user_id: number\r\n      created_at: number\r\n      rooms: {\r\n         id: number\r\n         name: string\r\n         total_counts: number\r\n         user_room_total_taps: number\r\n         enthusiastic_close_time: number\r\n         tap_speed: number\r\n         time_series?: {\r\n            num: number\r\n            counts: number\r\n         }[]\r\n         taps_ranking?: {\r\n            1: {\r\n               name: string\r\n               total_taps: number\r\n            }\r\n            2: {\r\n               name: string\r\n               total_taps: number\r\n            }\r\n            3: {\r\n               name: string\r\n               total_taps: number\r\n            }\r\n         }\r\n      }[]\r\n   }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   root: {\r\n      position: 'absolute',\r\n      zIndex: 1000,\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      color: '#333333',\r\n      padding: '10px',\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '5px',\r\n   },\r\n   floatButton: {\r\n      position: 'absolute',\r\n      right: '50px',\r\n      bottom: '20px',\r\n      zIndex: 200,\r\n      ...theme.typography.button,\r\n   },\r\n   backButton: {\r\n      position: 'fixed',\r\n      left: '25px',\r\n      top: '20px',\r\n      zIndex: 200,\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '5px',\r\n      ...theme.typography.button,\r\n   },\r\n}))\r\n\r\nconst maxes = [10, 30, 50, 100]\r\n\r\n// TODO 全体的なスタイル調整\r\nconst ThemeTemplate: FC<Props> = (props) => {\r\n   const classes = useStyles()\r\n   const history = useHistory()\r\n\r\n   const theme = props.theme\r\n   const [taps, setTaps] = useState<number>(0)\r\n   const [max, setMax] = useState<number>(10)\r\n   const [progress, setProgress] = useState<number>(0)\r\n   const [room, setRoom] = useState<number>(0)\r\n   // depthを相対的にする必要あり。\r\n   const [depth, setDepth] = useState<number>(200)\r\n\r\n   const countUp = () => {\r\n      setTaps((prev) => prev + 1)\r\n      console.log(taps)\r\n      if (taps >= max) {\r\n         // POST to user_taps\r\n         const requestParams: PostUserTaps = {\r\n            room_id: theme.rooms[room].id,\r\n            counts: max,\r\n         }\r\n         const headers = JSON.parse(\r\n            localStorage.getItem('headerUserInfo') as string\r\n         )\r\n         Api.postUserTaps(requestParams, headers).then((res: any) => {\r\n            console.log(res)\r\n         })\r\n         // 後で処理を５秒Fetchに移動させる。\r\n         // setDepth(depth + max)\r\n         setTaps(0)\r\n         setMax(maxes[Math.floor(Math.random() * maxes.length)])\r\n         setProgress(0)\r\n      } else {\r\n         setProgress((prev) => prev + (1 / max) * 100)\r\n      }\r\n   }\r\n\r\n   const timeCalService = new TimeCalService()\r\n\r\n   const changeRoom = () => {\r\n      setRoom((room + 1) % theme.rooms_num)\r\n      setTaps(0)\r\n      setProgress(0)\r\n      console.log(room)\r\n   }\r\n\r\n   return (\r\n      <div style={{ overflow: 'hidden', position: 'relative' }}>\r\n         {theme.rooms &&\r\n            timeCalService.IsPassed(\r\n               theme.rooms[room]?.enthusiastic_close_time\r\n            ) && <ThemeBackground />}\r\n         <div style={{ width: '100vw', height: '100vh' }}>\r\n            <div className={classes.root}>\r\n               <Typography noWrap style={{ textAlign: 'center' }}>\r\n                  <h2>{theme.name}</h2>\r\n               </Typography>\r\n               {theme.rooms_num > 1 && (\r\n                  <Typography noWrap style={{ textAlign: 'center' }}>\r\n                     <h2>陣営: {theme.rooms && theme.rooms[room]?.name}</h2>\r\n                  </Typography>\r\n               )}\r\n               <Box mb={3}>\r\n                  <TapButton countUp={countUp}></TapButton>\r\n               </Box>\r\n               <Box mb={3}>\r\n                  <TapsProgressBar\r\n                     progress={progress}\r\n                     max={max}\r\n                  ></TapsProgressBar>\r\n               </Box>\r\n               <Typography noWrap>\r\n                  <h2>\r\n                     合計スコア:{' '}\r\n                     {theme.rooms && theme.rooms[room].total_counts + taps}\r\n                  </h2>\r\n               </Typography>\r\n               <Typography noWrap>\r\n                  <h3>\r\n                     自分のスコア:{' '}\r\n                     {theme.rooms &&\r\n                        theme.rooms[room].user_room_total_taps + taps}\r\n                  </h3>\r\n               </Typography>\r\n            </div>\r\n            <div className={classes.floatButton}>\r\n               {theme.rooms_num != 1 && (\r\n                  <Button\r\n                     size=\"medium\"\r\n                     onClick={changeRoom}\r\n                     style={{\r\n                        backgroundColor: '#3EDBF0',\r\n                        fontWeight: 'bold',\r\n                        color: '#333333',\r\n                     }}\r\n                  >\r\n                     <SyncIcon />\r\n                     陣営を変更\r\n                  </Button>\r\n               )}\r\n            </div>\r\n            {/* { LeaveTime } */}\r\n         </div>\r\n         <div style={{ overflow: 'hidden' }}>\r\n            <Ocean depth={String(depth)}>\r\n               <Wave></Wave>\r\n            </Ocean>\r\n         </div>\r\n         <div className={classes.backButton}>\r\n            {theme.rooms_num != 1 && (\r\n               <Button\r\n                  color=\"primary\"\r\n                  size=\"medium\"\r\n                  onClick={() => {\r\n                     history.push(Routes.themes.path)\r\n                  }}\r\n               >\r\n                  <ArrowBackIosIcon />\r\n                  ルームリストに戻る\r\n               </Button>\r\n            )}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default ThemeTemplate\r\n\r\nconst Ocean = styled.div<{ depth: string }>`\r\n   height: ${(props) => props.depth}px;\r\n   width: 100%;\r\n   position: absolute;\r\n   bottom: 0;\r\n   left: 0;\r\n   background: #015871;\r\n`\r\n\r\nconst Wave = styled.div`\r\n   background: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/85486/wave.svg)\r\n      repeat-x;\r\n   background-size: 300px 12px;\r\n   position: absolute;\r\n   top: -12px;\r\n   width: 6400px;\r\n   height: 30px;\r\n   animation: wave 20s cubic-bezier(0.36, 0.45, 0.63, 0.53) infinite;\r\n   transform: translate3d(0, 0, 0);\r\n   @keyframes wave {\r\n      0% {\r\n         margin-left: 0;\r\n      }\r\n      100% {\r\n         margin-left: -1600px;\r\n      }\r\n   }\r\n`\r\n","import React, { FC, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { Api } from '../../action/action'\nimport { theme_with_two_room } from '../../mocks/mockData'\nimport RoomResultTemplate from '../templates/roomResultTemplate'\nimport ThemeTemplate from '../templates/themeTemplate'\n\nconst Theme: FC = () => {\n   const { id } = useParams<any>()\n   console.log(id)\n\n   const [theme, setTheme] = useState<any>(0)\n\n   useEffect(() => {\n      setInterval(() => {\n         Api.getTheme(id).then((res: any) => {\n            setTheme(res)\n         })\n         // const headers = JSON.parse(\n         //    localStorage.getItem('headerUserInfo') as string\n         // )\n         // Api.getThemes(undefined, headers).then((res: any) => {\n         //    setTheme(res)\n         // })\n         // setTheme(theme_with_two_room)\n         console.log('load theme')\n      }, 5000)\n   }, [])\n\n   return (\n      <>\n         {theme.is_closed ? (\n            <RoomResultTemplate theme_result={theme} />\n         ) : (\n            <ThemeTemplate theme={theme} />\n         )}\n      </>\n   )\n}\n\nexport default Theme\n","export class FormatCheckService {\r\n   //文字のチェック\r\n   public LengthCheck(character: string): boolean {\r\n      const result = character.length > 0 ? true : false\r\n      return result\r\n   }\r\n}\r\n","import { Themes } from '../domain/theme'\n\nconst Theme: Themes = {\n   color: {\n      primaryColor: '#094067',\n      secondaryColor: '#ef4565',\n      greyColor: '#5f6c7b',\n      disableColor: '#f1e7e7',\n   },\n   font: {\n      fontFamily:\n         \"'Avenir', 'Helvetica Neue', 'Helvetica', 'Arial', 'Hiragino Sans', 'ヒラギノ角ゴシック', YuGothic, 'Yu Gothic', 'メイリオ', Meiryo, 'ＭSＰゴシック', 'MS PGothic', sans-serif\",\n   },\n   background: {\n      primaryColor: '#fff',\n   },\n}\n\nexport default Theme\n","import { makeStyles } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState, FC } from 'react'\r\nimport { PostTheme } from 'src/domain/postThemes'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n   textField: {\r\n      margin: '4px 0px',\r\n   },\r\n}))\r\n\r\ntype Props = {\r\n   postThemeData: PostTheme\r\n   setPostThemeData: (post: PostTheme) => void\r\n}\r\n\r\nconst ThemeForm: FC<Props> = (props) => {\r\n   const classes = useStyles()\r\n   const { postThemeData, setPostThemeData } = props\r\n   const [checked, setChecked] = useState<boolean>(false)\r\n\r\n   const handleCheckedChange = (event: any) => {\r\n      setChecked(event.target.checked)\r\n      if (event.target.checked) {\r\n         setPostThemeData({\r\n            ...postThemeData,\r\n            rooms_num: 2,\r\n            rooms: [{ name: '' }, { name: '' }],\r\n         })\r\n      } else {\r\n         setPostThemeData({\r\n            ...postThemeData,\r\n            rooms_num: 1,\r\n            rooms: [{ name: postThemeData.name }],\r\n         })\r\n      }\r\n   }\r\n\r\n   const handleChange = (name: string) => (event: any) => {\r\n      if (name == '0' || name == '1') {\r\n         const roomArray = { ...postThemeData }.rooms\r\n         roomArray[name] = {\r\n            name: event.target.value,\r\n         }\r\n         setPostThemeData({\r\n            ...postThemeData,\r\n            rooms: roomArray,\r\n         })\r\n      } else {\r\n         if (checked || name == 'duration') {\r\n            setPostThemeData({\r\n               ...postThemeData,\r\n               [name]: event.target.value,\r\n            })\r\n         } else {\r\n            setPostThemeData({\r\n               ...postThemeData,\r\n               [name]: event.target.value,\r\n               rooms: [{ name: event.target.value }],\r\n            })\r\n         }\r\n      }\r\n   }\r\n\r\n   console.log(postThemeData)\r\n   return (\r\n      <div>\r\n         <TextField\r\n            id=\"filled-theme-input\"\r\n            label=\"お題\"\r\n            variant=\"outlined\"\r\n            className={classes.textField}\r\n            onChange={handleChange('name')}\r\n         />\r\n         <FormControlLabel\r\n            control={\r\n               <Checkbox\r\n                  checked={checked}\r\n                  onChange={handleCheckedChange}\r\n                  color=\"primary\"\r\n               />\r\n            }\r\n            label=\"競争ルームを作成しますか？\"\r\n            className={classes.textField}\r\n         />\r\n         <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">\r\n               終了期間\r\n            </InputLabel>\r\n            <Select\r\n               labelId=\"demo-simple-select-helper-label\"\r\n               id=\"demo-simple-select-helper\"\r\n               value={postThemeData.duration}\r\n               onChange={handleChange('duration')}\r\n            >\r\n               <MenuItem value={20}>20second</MenuItem>\r\n               <MenuItem value={60}>1minute</MenuItem>\r\n               <MenuItem value={60 * 3}>3minute</MenuItem>\r\n               <MenuItem value={60 * 30}>30minute</MenuItem>\r\n               <MenuItem value={60 * 60}>1hour</MenuItem>\r\n               <MenuItem value={24 * 3600}>24hour</MenuItem>\r\n               <MenuItem value={24 * 3600 * 7}>7day</MenuItem>\r\n               <MenuItem value={24 * 3600 * 30}>30day</MenuItem>\r\n            </Select>\r\n         </FormControl>\r\n         {checked && (\r\n            <div>\r\n               <TextField\r\n                  id=\"filled-room1-input\"\r\n                  label=\"ルーム名1\"\r\n                  variant=\"outlined\"\r\n                  className={classes.textField}\r\n                  onChange={handleChange('0')}\r\n               />\r\n               <TextField\r\n                  id=\"filled-room2-input\"\r\n                  label=\"ルーム名2\"\r\n                  variant=\"outlined\"\r\n                  className={classes.textField}\r\n                  onChange={handleChange('1')}\r\n               />\r\n            </div>\r\n         )}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ThemeForm\r\n","import { Theme, makeStyles } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport React, { FC, useState, useContext } from 'react'\r\nimport { Api } from 'src/action/action'\r\nimport { sendSuccess, sendError } from 'src/alert/swalAlertContent'\r\nimport { PostTheme } from 'src/domain/postThemes'\r\nimport { FormatCheckService } from 'src/services/formatCheckService'\r\nimport swal from 'sweetalert'\r\n\r\nimport Themes from '../../utils/theme'\r\nimport { ThemeListContext } from '../pages/themes'\r\n\r\nimport ThemeForm from './themeForm'\r\n\r\nconst useStyles = makeStyles<Theme>(() => ({\r\n   font: {\r\n      fontFamily: Themes.font.fontFamily,\r\n   },\r\n}))\r\n\r\nconst initialPostThemeData: PostTheme = {\r\n   name: '',\r\n   rooms_num: 1,\r\n   duration: 20,\r\n   rooms: [{ name: '' }],\r\n}\r\nconst ThemeDialog: FC<any> = (props) => {\r\n   const classes = useStyles()\r\n   const { open, handleDialogClose } = props\r\n   const { handleGetThemes } = useContext(ThemeListContext)\r\n   const [postThemeData, setPostThemeData] =\r\n      useState<PostTheme>(initialPostThemeData)\r\n   const formatCheckService = new FormatCheckService()\r\n\r\n   const handlePostTheme = () => {\r\n      const headers = JSON.parse(\r\n         localStorage.getItem('headerUserInfo') as string\r\n      )\r\n      Api.postThemes(postThemeData, headers).then((res: any) => {\r\n         if (res) {\r\n            swal(sendSuccess).then(() => {\r\n               handleGetThemes(undefined)\r\n               handleDialogClose()\r\n            })\r\n         } else {\r\n            swal(sendError)\r\n         }\r\n      })\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Dialog\r\n            open={open}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n         >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n               <span className={classes.font}> テーマ投稿</span>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n               <DialogContentText id=\"alert-dialog-description\">\r\n                  <ThemeForm\r\n                     postThemeData={postThemeData}\r\n                     setPostThemeData={setPostThemeData}\r\n                  />\r\n               </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n               <Button\r\n                  onClick={handleDialogClose}\r\n                  color=\"primary\"\r\n                  className={classes.font}\r\n               >\r\n                  閉じる\r\n               </Button>\r\n               <Button\r\n                  disabled={\r\n                     !(\r\n                        formatCheckService.LengthCheck(postThemeData.name) &&\r\n                        postThemeData.rooms.every((v) =>\r\n                           formatCheckService.LengthCheck(v.name)\r\n                        )\r\n                     )\r\n                  }\r\n                  onClick={handlePostTheme}\r\n                  color=\"primary\"\r\n                  className={classes.font}\r\n                  autoFocus\r\n               >\r\n                  投稿\r\n               </Button>\r\n            </DialogActions>\r\n         </Dialog>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ThemeDialog\r\n","import Fab from '@material-ui/core/Fab'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport moment from 'moment'\r\nimport React, { useState, FC } from 'react'\r\nimport ThemeDialog from './themeDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      position: 'fixed',\r\n      zIndex: 1000,\r\n      bottom: '5%',\r\n      right: '5%',\r\n   },\r\n   margin: {\r\n      margin: theme.spacing(1),\r\n   },\r\n   addIcon: {\r\n      marginRight: theme.spacing(1),\r\n   },\r\n}))\r\n\r\nconst FloatingButton: FC = () => {\r\n   const classes = useStyles()\r\n   const [open, setOpen] = useState<boolean>(false)\r\n\r\n   const handleDialogOpen = () => {\r\n      setOpen(true)\r\n   }\r\n\r\n   const handleDialogClose = () => {\r\n      setOpen(false)\r\n   }\r\n   return (\r\n      <div className={classes.root}>\r\n         <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={classes.margin}\r\n            onClick={handleDialogOpen}\r\n         >\r\n            <AddIcon className={classes.addIcon} />\r\n            テーマを投稿する\r\n         </Fab>\r\n         <ThemeDialog\r\n            open={open}\r\n            handleDialogClose={handleDialogClose}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default FloatingButton\r\n","import AppBar from '@material-ui/core/AppBar'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { alpha, makeStyles } from '@material-ui/core/styles'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport React, { FC, useContext } from 'react'\r\nimport { Api } from 'src/action/action'\r\nimport TipTapLogo from 'src/image/TipTap_logo.png'\r\n\r\nimport Themes from '../../utils/theme'\r\nimport { ThemeListContext } from '../pages/themes'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      flexGrow: 1,\r\n   },\r\n   title: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n         display: 'block',\r\n      },\r\n   },\r\n   search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n         backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n         marginLeft: theme.spacing(1),\r\n         width: 'auto',\r\n      },\r\n   },\r\n   searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n   },\r\n   inputRoot: {\r\n      color: 'inherit',\r\n   },\r\n   inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n         width: '12ch',\r\n         '&:focus': {\r\n            width: '20ch',\r\n         },\r\n      },\r\n   },\r\n   imgStyle: {\r\n      width: '20px',\r\n   },\r\n}))\r\n\r\nconst SearchAppBar: FC = () => {\r\n   const classes = useStyles()\r\n   const { handleGetThemes } = useContext(ThemeListContext)\r\n\r\n   const handleSearch = (event: any) => {\r\n      handleGetThemes(event.target.value)\r\n   }\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n               <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  {/* <img\r\n                     src={TipTapLogo}\r\n                     alt=\"tiptap_logo\"\r\n                     className={classes.imgStyle}\r\n                  /> */}\r\n                  TipTap\r\n               </Typography>\r\n               <div className={classes.search}>\r\n                  <div className={classes.searchIcon}>\r\n                     <SearchIcon />\r\n                  </div>\r\n                  <InputBase\r\n                     placeholder=\"テーマを検索\"\r\n                     classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                     }}\r\n                     inputProps={{ 'aria-label': 'search' }}\r\n                     onChange={handleSearch}\r\n                  />\r\n               </div>\r\n            </Toolbar>\r\n         </AppBar>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SearchAppBar\r\n","import Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun'\r\nimport moment from 'moment'\r\nimport React, { FC, useContext, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { TimeCalService } from 'src/services/timeCalService'\r\n\r\nimport { SearchedThemes } from '../../domain/postThemes'\r\nimport { Routes } from '../../domain/router'\r\nimport Themes from '../../utils/theme'\r\nimport { ThemeListContext } from '../pages/themes'\r\nimport CompetitionLabel from '../uiParts/competitionLabel'\r\n\r\nconst useStyles = makeStyles({\r\n   card: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      minWidth: 345,\r\n      width: '70%',\r\n      margin: '4px',\r\n   },\r\n   disableCard: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      background: Themes.color.disableColor,\r\n      minWidth: 345,\r\n      width: '70%',\r\n      margin: '4px',\r\n   },\r\n   title: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n   },\r\n   totalCount: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      display: 'flex',\r\n      padding: '0px 8px',\r\n   },\r\n   closeTime: {\r\n      fontFamily: Themes.font.fontFamily,\r\n   },\r\n   competitionIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: '3px',\r\n      fontSize: '15px',\r\n      borderRadius: '5px',\r\n      marginLeft: 'auto',\r\n      color: '#fff',\r\n      background: 'red',\r\n   },\r\n})\r\n\r\ntype LeftTimeProps = {\r\n   isClose: boolean\r\n   displayTime: string\r\n}\r\n\r\nconst object = {\r\n   isClose: false,\r\n   displayTime: '',\r\n}\r\nconst ThemeListCards: FC = () => {\r\n   const classes = useStyles()\r\n   const history = useHistory()\r\n   const [leftTime, setLeftTime] = useState<LeftTimeProps>(object)\r\n   const timeCalService = new TimeCalService()\r\n   const { themeList } = useContext(ThemeListContext)\r\n   console.log(themeList)\r\n\r\n   // useEffect(() => {\r\n   //    setInterval(intervalCount, 1000)\r\n   // }, [])\r\n\r\n   return (\r\n      <>\r\n         {themeList.searched_themes.map((value: SearchedThemes) => {\r\n            const leftTime = timeCalService.DisplayLeaveTime(value.close_time)\r\n            return (\r\n               <Card\r\n                  className={classes.card}\r\n                  key={value.id}\r\n                  onClick={() => {\r\n                     history.push(Routes.themes.path + '/' + String(value.id))\r\n                  }}\r\n               >\r\n                  <CardContent>\r\n                     <Typography className={classes.title}>\r\n                        <div>{value.name}</div>\r\n                        {value.rooms_num !== 1 && (\r\n                           <div className={classes.competitionIcon}>\r\n                              <DirectionsRunIcon />\r\n                              競争\r\n                           </div>\r\n                        )}\r\n                     </Typography>\r\n                     <Typography className={classes.closeTime}>\r\n                        {!value.is_closed ? (\r\n                           <>{leftTime.displayTime}</>\r\n                        ) : (\r\n                           <>終了</>\r\n                        )}\r\n                     </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                     <Typography className={classes.totalCount}>\r\n                        トータルカウント：{value.total_counts}\r\n                     </Typography>\r\n                  </CardActions>\r\n               </Card>\r\n            )\r\n         })}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ThemeListCards\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport React, { useState, FC } from 'react'\r\n\r\nimport Themes from '../../utils/theme'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n   title: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      fontWeight: 'bold',\r\n      fontSize: '20px',\r\n      borderBottom: ' 1px solid',\r\n      display: 'inline-block',\r\n   },\r\n}))\r\n\r\nconst ThemeListTitle: FC = () => {\r\n   const classes = useStyles()\r\n\r\n   return <div className={classes.title}>急上昇テーマ</div>\r\n}\r\nexport default ThemeListTitle\r\n","import { makeStyles } from '@material-ui/core'\r\nimport React, { FC } from 'react'\r\n\r\nimport FloatingButton from '../uiParts/floatingButton'\r\nimport SearchAppBar from '../uiParts/searchAppBar'\r\nimport ThemeListCards from '../uiParts/themeListCards'\r\nimport ThemeListTitle from '../uiParts/themeListTitle'\r\n\r\nconst useStyles = makeStyles({\r\n   root: {},\r\n   content: {\r\n      height: '100%',\r\n      marginTop: '70px',\r\n      overflowY: 'scroll',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n   },\r\n   title: {\r\n      margin: '4px',\r\n   },\r\n   cards: {},\r\n})\r\n// TODO 全体的なスタイル調整\r\nconst ThemeListTemplate: FC = () => {\r\n   const classes = useStyles()\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <SearchAppBar />\r\n         <FloatingButton />\r\n         <div className={classes.content}>\r\n            <div>\r\n               <div className={classes.title}>\r\n                  <ThemeListTitle />\r\n               </div>\r\n               <div className={classes.cards}>\r\n                  <ThemeListCards />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default ThemeListTemplate\r\n","import React, { FC, useEffect, useState, createContext } from 'react'\r\n\r\nimport { Api } from '../../action/action'\r\nimport RoomResultTemplate from '../templates/roomResultTemplate'\r\nimport ThemeListTemplate from '../templates/themeListTemplate'\r\nimport ThemeTemplate from '../templates/themeTemplate'\r\n\r\ntype ContextProps = {\r\n   themeList: any\r\n   handleGetThemes: (name: string | undefined) => void\r\n}\r\n\r\nexport const ThemeListContext = createContext({} as ContextProps)\r\n\r\nconst Themes: FC = () => {\r\n   const [themeList, setThemeList] = useState<any>()\r\n\r\n   const handleGetThemes = (name: string | undefined) => {\r\n      const headers = JSON.parse(\r\n         localStorage.getItem('headerUserInfo') as string\r\n      )\r\n      Api.getThemes(name, headers).then((res: any) => {\r\n         setThemeList(res)\r\n      })\r\n   }\r\n\r\n   useEffect(() => {\r\n      handleGetThemes(undefined)\r\n   }, [])\r\n\r\n   return (\r\n      <div>\r\n         {themeList && (\r\n            <ThemeListContext.Provider value={{ themeList, handleGetThemes }}>\r\n               <ThemeListTemplate />\r\n            </ThemeListContext.Provider>\r\n         )}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Themes\r\n\r\n//  {\r\n//     !themeOpen ? ( //テーマリスト表示\r\n//        <ThemeListTemplate />\r\n//     ) : (\r\n//        <>\r\n//           {theme.is_closed ? (\r\n//              <RoomResultTemplate theme_result={theme} />\r\n//           ) : (\r\n//              <ThemeTemplate theme={theme} />\r\n//           )}\r\n//        </>\r\n//     )\r\n//  }\r\n","import React, { FC } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Landing from './components/pages/landing'\nimport Theme from './components/pages/theme'\nimport Themes from './components/pages/themes'\nimport ThemeBackground from './components/uiParts/themeBackground.jsx'\nimport { Routes } from './domain/router'\n\nconst App: FC = () => {\n   return (\n      <Router>\n         <Switch>\n            <Route exact path={Routes.landing.path}>\n               <Landing />\n            </Route>\n            <Route exact path={Routes.themes.path}>\n               <Themes />\n            </Route>\n            <Route path={Routes.theme.path}>\n               <Theme />\n            </Route>\n            <Route exact path={Routes.themeBackground.path}>\n               <ThemeBackground />\n            </Route>\n            <Route>\n               <NoMatch />\n            </Route>\n         </Switch>\n      </Router>\n   )\n}\n\nexport default App\n\nconst NoMatch = () => <h2>Not Found</h2>\n","import { ReportHandler } from 'web-vitals'\n\n// eslint-disable-next-line\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(\n         ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n         }\n      )\n   }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}